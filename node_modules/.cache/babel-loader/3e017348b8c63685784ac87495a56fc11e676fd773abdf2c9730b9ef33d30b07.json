{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Accappi\\\\Desktop\\\\progetti\\\\cinemate\\\\src\\\\pages\\\\PopularMoviesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MovieList from './../components/MovieList';\nimport { Container, CircularProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PopularMoviesPage() {\n  _s();\n  const [allMovies, setAllMovies] = useState([]); // Stores all movies fetched initially\n  const [visibleMovies, setVisibleMovies] = useState([]); // Stores movies currently visible\n  const [loading, setLoading] = useState(true);\n  const moviesPerLoad = 6; // Number of movies to show on each scroll\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/movies/top100movies');\n        const movies = response.data;\n        setAllMovies(movies);\n        setVisibleMovies(movies.slice(0, moviesPerLoad)); // Initially show the first chunk\n      } catch (error) {\n        alert('Error fetching movies: ' + error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, []);\n  useEffect(() => {\n    const handleScroll = () => {\n      // Check if user is near bottom of the page\n      if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 500 && !loading) {\n        setLoading(true);\n        // Load more movies\n        setVisibleMovies(prevVisibleMovies => {\n          const currentLength = prevVisibleMovies.length;\n          const moreMovies = allMovies.slice(currentLength, currentLength + moviesPerLoad);\n          return [...prevVisibleMovies, ...moreMovies];\n        });\n        setLoading(false);\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [allMovies, loading]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(MovieList, {\n      title: \"Popular Movies\",\n      movies: visibleMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }, this), visibleMovies.length >= allMovies.length && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Yay! You have seen it all\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(PopularMoviesPage, \"DLQj+DBfXe+I56BSZfkXteNwe8E=\");\n_c = PopularMoviesPage;\nexport default PopularMoviesPage;\n\n// Old Without load other during scroll\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import MovieList from './../components/MovieList';\n// import { Container, CircularProgress } from '@mui/material';\n\n// function PopularMoviesPage() {\n//   const [popularMovies, setPopularMovies] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     const fetchMovies = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/api/movies/top100movies');\n//         const movies = response.data;\n//         console.log(response.data[0])\n//         setPopularMovies(movies);\n//       } catch (error) {\n//         alert('Error fetching movies: ' + error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchMovies();\n//   }, []);\n\n//   if (loading) {\n//     return (\n//       <Container>\n//         <CircularProgress />\n//       </Container>\n//     );\n//   }\n\n//   return (\n//     <Container>\n//       <MovieList\n//         title=\"Popular Movies\"\n//         movies={popularMovies}\n//       />\n//     </Container>\n//   );\n// }\n\n// export default PopularMoviesPage;\nvar _c;\n$RefreshReg$(_c, \"PopularMoviesPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","MovieList","Container","CircularProgress","jsxDEV","_jsxDEV","PopularMoviesPage","_s","allMovies","setAllMovies","visibleMovies","setVisibleMovies","loading","setLoading","moviesPerLoad","fetchMovies","response","get","movies","data","slice","error","alert","handleScroll","window","innerHeight","scrollY","document","body","offsetHeight","prevVisibleMovies","currentLength","length","moreMovies","addEventListener","removeEventListener","children","title","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/Accappi/Desktop/progetti/cinemate/src/pages/PopularMoviesPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport MovieList from './../components/MovieList';\r\nimport { Container, CircularProgress } from '@mui/material';\r\n\r\nfunction PopularMoviesPage() {\r\n  const [allMovies, setAllMovies] = useState([]); // Stores all movies fetched initially\r\n  const [visibleMovies, setVisibleMovies] = useState([]); // Stores movies currently visible\r\n  const [loading, setLoading] = useState(true);\r\n  const moviesPerLoad = 6; // Number of movies to show on each scroll\r\n\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/movies/top100movies');\r\n        const movies = response.data;\r\n        setAllMovies(movies);\r\n        setVisibleMovies(movies.slice(0, moviesPerLoad)); // Initially show the first chunk\r\n      } catch (error) {\r\n        alert('Error fetching movies: ' + error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      // Check if user is near bottom of the page\r\n      if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 500 && !loading) {\r\n        setLoading(true);\r\n        // Load more movies\r\n        setVisibleMovies((prevVisibleMovies) => {\r\n          const currentLength = prevVisibleMovies.length;\r\n          const moreMovies = allMovies.slice(currentLength, currentLength + moviesPerLoad);\r\n          return [...prevVisibleMovies, ...moreMovies];\r\n        });\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, [allMovies, loading]);\r\n\r\n  return (\r\n    <Container>\r\n      <MovieList title=\"Popular Movies\" movies={visibleMovies} />\r\n      {loading && <CircularProgress />}\r\n      {visibleMovies.length >= allMovies.length && (\r\n        <p style={{ textAlign: 'center' }}>Yay! You have seen it all</p>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default PopularMoviesPage;\r\n\r\n\r\n\r\n// Old Without load other during scroll\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import MovieList from './../components/MovieList';\r\n// import { Container, CircularProgress } from '@mui/material';\r\n\r\n// function PopularMoviesPage() {\r\n//   const [popularMovies, setPopularMovies] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     const fetchMovies = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:5000/api/movies/top100movies');\r\n//         const movies = response.data;\r\n//         console.log(response.data[0])\r\n//         setPopularMovies(movies);\r\n//       } catch (error) {\r\n//         alert('Error fetching movies: ' + error);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchMovies();\r\n//   }, []);\r\n\r\n//   if (loading) {\r\n//     return (\r\n//       <Container>\r\n//         <CircularProgress />\r\n//       </Container>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <Container>\r\n//       <MovieList\r\n//         title=\"Popular Movies\"\r\n//         movies={popularMovies}\r\n//       />\r\n//     </Container>\r\n//   );\r\n// }\r\n\r\n// export default PopularMoviesPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}