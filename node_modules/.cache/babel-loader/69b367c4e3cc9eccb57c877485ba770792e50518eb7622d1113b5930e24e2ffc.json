{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Accappi\\\\Desktop\\\\progetti\\\\cinemate\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\n// src/pages/HomePage.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, Typography, CircularProgress } from '@mui/material';\nimport { useAuth } from '../contexts/AuthContext';\nimport '../index.css';\nimport WebFont from 'webfontloader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [userTopGenres, setUserTopGenres] = useState(true);\n  const {\n    userId\n  } = useAuth();\n  useEffect(() => {\n    WebFont.load({\n      google: {\n        families: ['Poppins:400,700', 'sans-serif']\n      }\n    });\n  }, []);\n  useEffect(() => {\n    // Fetch like count for the movie\n    const getUserTopGenres = async () => {\n      if (userId === -1) {\n        console.log(\"User not logged.\");\n      } else {\n        setLoading(true);\n        try {\n          const response = await axios.post('http://localhost:5000/api/recommendation/getUserTopGenres', {\n            userId: userId\n          });\n          if (response.data.success) {\n            setUserTopGenres(response.data.userTopGenres);\n          } else {\n            console.error('Error fetching like count:', response.data.message);\n            alert('Error fetching like count:', response.data.message);\n          }\n        } catch (error) {\n          console.error('Error fetching like count:', error);\n          alert('Error fetching like count:', error);\n        } finally {\n          setLoading(false);\n        }\n      }\n    };\n    getUserTopGenres();\n  }, [userId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      sx: \"font-family:Poppins;\",\n      children: \"Coming Soon ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"K98gA7RYTnL/HEyxIO7aoj26MKM=\", false, function () {\n  return [useAuth];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Typography","CircularProgress","useAuth","WebFont","jsxDEV","_jsxDEV","HomePage","_s","loading","setLoading","userTopGenres","setUserTopGenres","userId","load","google","families","getUserTopGenres","console","log","response","post","data","success","error","message","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","sx","_c","$RefreshReg$"],"sources":["C:/Users/Accappi/Desktop/progetti/cinemate/src/pages/HomePage.js"],"sourcesContent":["// src/pages/HomePage.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, Typography, CircularProgress } from '@mui/material';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport '../index.css';\r\nimport WebFont from 'webfontloader';\r\n\r\nfunction HomePage() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [userTopGenres, setUserTopGenres] = useState(true);\r\n  const { userId } = useAuth();\r\n\r\n  useEffect(() => {\r\n    WebFont.load({\r\n      google: {\r\n        families: ['Poppins:400,700', 'sans-serif'],\r\n      },\r\n    });\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    // Fetch like count for the movie\r\n    const getUserTopGenres = async () => {\r\n      if(userId === -1) {\r\n        console.log(\"User not logged.\");\r\n      }\r\n      else {\r\n        setLoading(true);\r\n        try {\r\n          const response = await axios.post('http://localhost:5000/api/recommendation/getUserTopGenres', { userId: userId });\r\n          if (response.data.success) {\r\n            setUserTopGenres(response.data.userTopGenres);\r\n          } else {\r\n            console.error('Error fetching like count:', response.data.message);\r\n            alert('Error fetching like count:', response.data.message)\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching like count:', error);\r\n          alert('Error fetching like count:', error)\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      }\r\n    };\r\n    getUserTopGenres();\r\n  }, [userId]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container>\r\n        <CircularProgress />\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" gutterBottom sx={\"font-family:Poppins;\"}>\r\n        Coming Soon ...\r\n      </Typography>\r\n      {/* <Typography variant=\"body2\" color=\"text.primary\">\r\n          {userTopGenres[0] + \"\\n\"}\r\n          {userTopGenres[1] + \"\\n\"}\r\n          {userTopGenres[2] + \"\\n\"}\r\n      </Typography> */}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,UAAU,EAAEC,gBAAgB,QAAQ,eAAe;AACvE,SAASC,OAAO,QAAQ,yBAAyB;AACjD,OAAO,cAAc;AACrB,OAAOC,OAAO,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM;IAAEgB;EAAO,CAAC,GAAGV,OAAO,CAAC,CAAC;EAE5BL,SAAS,CAAC,MAAM;IACdM,OAAO,CAACU,IAAI,CAAC;MACXC,MAAM,EAAE;QACNC,QAAQ,EAAE,CAAC,iBAAiB,EAAE,YAAY;MAC5C;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAENlB,SAAS,CAAC,MAAM;IACd;IACA,MAAMmB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAGJ,MAAM,KAAK,CAAC,CAAC,EAAE;QAChBK,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MACjC,CAAC,MACI;QACHT,UAAU,CAAC,IAAI,CAAC;QAChB,IAAI;UACF,MAAMU,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAC,2DAA2D,EAAE;YAAER,MAAM,EAAEA;UAAO,CAAC,CAAC;UAClH,IAAIO,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;YACzBX,gBAAgB,CAACQ,QAAQ,CAACE,IAAI,CAACX,aAAa,CAAC;UAC/C,CAAC,MAAM;YACLO,OAAO,CAACM,KAAK,CAAC,4BAA4B,EAAEJ,QAAQ,CAACE,IAAI,CAACG,OAAO,CAAC;YAClEC,KAAK,CAAC,4BAA4B,EAAEN,QAAQ,CAACE,IAAI,CAACG,OAAO,CAAC;UAC5D;QACF,CAAC,CAAC,OAAOD,KAAK,EAAE;UACdN,OAAO,CAACM,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;UAClDE,KAAK,CAAC,4BAA4B,EAAEF,KAAK,CAAC;QAC5C,CAAC,SAAS;UACRd,UAAU,CAAC,KAAK,CAAC;QACnB;MACF;IACF,CAAC;IACDO,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZ,IAAIJ,OAAO,EAAE;IACX,oBACEH,OAAA,CAACN,SAAS;MAAA2B,QAAA,eACRrB,OAAA,CAACJ,gBAAgB;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAEhB;EAEA,oBACEzB,OAAA,CAACN,SAAS;IAAA2B,QAAA,eACRrB,OAAA,CAACL,UAAU;MAAC+B,OAAO,EAAC,IAAI;MAACC,YAAY;MAACC,EAAE,EAAE,sBAAuB;MAAAP,QAAA,EAAC;IAElE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAMJ,CAAC;AAEhB;AAACvB,EAAA,CA5DQD,QAAQ;EAAA,QAGIJ,OAAO;AAAA;AAAAgC,EAAA,GAHnB5B,QAAQ;AA8DjB,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}