{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Accappi\\\\Desktop\\\\progetti\\\\cinemate\\\\src\\\\components\\\\CommentsSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Box, Typography, TextField, Button } from '@mui/material';\nimport { useAuth } from '../contexts/AuthContext';\nimport SendIcon from '@mui/icons-material/Send';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommentsSection({\n  mediaId,\n  type\n}) {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const {\n    userId\n  } = useAuth();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await axios.post('http://localhost:5000/api/comments/getComments', {\n          movie_id: mediaId\n        });\n        if (response.data.success) {\n          const commentsWithReplies = await Promise.all(response.data.comments_list.map(async comment => {\n            const repliesResponse = await axios.post('http://localhost:5000/api/comments/getReplies', {\n              comment_id: comment.id\n            });\n            return {\n              ...comment,\n              replies: repliesResponse.data.success ? repliesResponse.data.replies_list : [] // Carica le risposte\n            };\n          }));\n          setComments(commentsWithReplies);\n        } else {\n          console.error('Error fetching comments:', response.data.message);\n        }\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    };\n    fetchComments();\n  }, [mediaId]);\n  const handleCommentSubmit = async () => {\n    if (userId === -1) {\n      navigate(\"/signin\");\n    } else {\n      try {\n        const response = await axios.post('http://localhost:5000/api/comments/addComment', {\n          userId,\n          movieId: mediaId,\n          comment: newComment\n        });\n        if (response.data.success) {\n          const newCommentWithReplies = {\n            ...response.data.comment,\n            username: response.data.comment.username,\n            replies: [] // Le nuove risposte saranno vuote\n          };\n          setComments([...comments, newCommentWithReplies]);\n          setNewComment('');\n        } else {\n          alert('Error adding comment: ' + response.data.message);\n        }\n      } catch (error) {\n        alert('Error adding comment: ' + error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 1\n      },\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            fontWeight: 'bold'\n          },\n          children: [comment.username, \": \", comment.comment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), comment.replies.map(reply => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            ml: 3,\n            mt: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: reply.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this), \": \", reply.reply]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)\n        }, reply.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this))]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        label: \"Add a comment\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleCommentSubmit,\n        startIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 22\n        }, this),\n        sx: {\n          ml: 1,\n          color: \"#fff\",\n          border: \"solid 1px #1E1E1E\",\n          '&:hover': {\n            borderColor: \"#fff\"\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentsSection, \"5XqZCibHGuo3M5GShB4y9KnTeIQ=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = CommentsSection;\nexport default CommentsSection;\nvar _c;\n$RefreshReg$(_c, \"CommentsSection\");","map":{"version":3,"names":["React","useState","useEffect","axios","Box","Typography","TextField","Button","useAuth","SendIcon","useNavigate","jsxDEV","_jsxDEV","CommentsSection","mediaId","type","_s","comments","setComments","newComment","setNewComment","userId","navigate","fetchComments","response","post","movie_id","data","success","commentsWithReplies","Promise","all","comments_list","map","comment","repliesResponse","comment_id","id","replies","replies_list","console","error","message","handleCommentSubmit","movieId","newCommentWithReplies","username","alert","sx","mt","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","mb","fontWeight","reply","ml","display","value","onChange","e","target","label","fullWidth","onClick","startIcon","color","border","borderColor","_c","$RefreshReg$"],"sources":["C:/Users/Accappi/Desktop/progetti/cinemate/src/components/CommentsSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Box, Typography, TextField, Button } from '@mui/material';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction CommentsSection({ mediaId, type }) {\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n  const { userId } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchComments = async () => {\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/api/comments/getComments', { movie_id: mediaId });\r\n        if (response.data.success) {\r\n          const commentsWithReplies = await Promise.all(response.data.comments_list.map(async (comment) => {\r\n            const repliesResponse = await axios.post('http://localhost:5000/api/comments/getReplies', { comment_id: comment.id });\r\n\r\n            return {\r\n              ...comment,\r\n              replies: repliesResponse.data.success ? repliesResponse.data.replies_list : [] // Carica le risposte\r\n            };\r\n          }));\r\n          setComments(commentsWithReplies);\r\n        } else {\r\n          console.error('Error fetching comments:', response.data.message);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching comments:', error);\r\n      }\r\n    };\r\n\r\n    fetchComments();\r\n  }, [mediaId]);\r\n\r\n  const handleCommentSubmit = async () => {\r\n    if (userId === -1) {\r\n      navigate(\"/signin\");\r\n    } else {\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/api/comments/addComment', {\r\n          userId,\r\n          movieId: mediaId,\r\n          comment: newComment\r\n        });\r\n        if (response.data.success) {\r\n          const newCommentWithReplies = {\r\n            ...response.data.comment,\r\n            username: response.data.comment.username,\r\n            replies: [] // Le nuove risposte saranno vuote\r\n          };\r\n          setComments([...comments, newCommentWithReplies]);\r\n          setNewComment('');\r\n        } else {\r\n          alert('Error adding comment: ' + response.data.message);\r\n        }\r\n      } catch (error) {\r\n        alert('Error adding comment: ' + error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ mt: 2 }}>\r\n      <Typography variant=\"h6\">Comments</Typography>\r\n      <Box sx={{ mt: 1 }}>\r\n        {comments.map((comment) => (\r\n          <Box key={comment.id} sx={{ mb: 3 }}>\r\n            <Typography variant=\"body1\" sx={{ fontWeight: 'bold' }}>{comment.username}: {comment.comment}</Typography>\r\n            {/* Sezione risposte per ciascun commento */}\r\n            {comment.replies.map((reply) => (\r\n              <Box key={reply.id} sx={{ ml: 3, mt: 1 }}>\r\n                <Typography variant=\"body2\">\r\n                  <strong>{reply.username}</strong>: {reply.reply}\r\n                </Typography>\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n        ))}\r\n      </Box>\r\n      <Box sx={{ display: 'flex', mt: 2 }}>\r\n        <TextField\r\n          value={newComment}\r\n          onChange={(e) => setNewComment(e.target.value)}\r\n          label=\"Add a comment\"\r\n          fullWidth\r\n        />\r\n        <Button\r\n          onClick={handleCommentSubmit}\r\n          startIcon={<SendIcon />}\r\n          sx={{\r\n            ml: 1,\r\n            color: \"#fff\",\r\n            border: \"solid 1px #1E1E1E\",\r\n            '&:hover': {\r\n              borderColor: \"#fff\",\r\n            }\r\n          }}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CommentsSection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}