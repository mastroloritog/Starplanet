{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Accappi\\\\Desktop\\\\progetti\\\\cinemate\\\\src\\\\components\\\\CommentsSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Box, Typography, TextField, Button } from '@mui/material';\nimport { useAuth } from '../contexts/AuthContext';\nimport SendIcon from '@mui/icons-material/Send';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommentsSection({\n  mediaId,\n  type\n}) {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const {\n    userId\n  } = useAuth();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await axios.post('http://localhost:5000/api/comments/getComments', {\n          movie_id: mediaId\n        });\n        if (response.data.success) {\n          setComments(response.data.comments_list);\n        } else {\n          console.error('Error fetching comments:', response.data.message);\n        }\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    };\n    fetchComments();\n  }, [mediaId]);\n  const handleCommentSubmit = async () => {\n    if (userId === -1) {\n      navigate(\"/signin\");\n    } else {\n      try {\n        const response = await axios.post('http://localhost:5000/api/comments/addComment', {\n          userId,\n          movieId: mediaId,\n          comment: newComment\n        });\n        if (response.data.success) {\n          setComments([...comments, response.data.comment]);\n          setNewComment('');\n        } else {\n          alert('Error adding comment: ' + response.data.message);\n        }\n      } catch (error) {\n        alert('Error adding comment: ' + error);\n      }\n    }\n  };\n  const getUsernameFromId = async user_id => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/comments/getUsernameFromId', {\n        userId: user_id\n      });\n      if (response.data.success) {\n        return response.data.username;\n      } else {\n        alert('Error fetching usernames in comments: ' + response.data.message);\n      }\n    } catch (error) {\n      alert('Error fetching usernames in comments: ' + error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 1\n      },\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [comment.user_id, \": \", comment.comment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        label: \"Add a comment\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleCommentSubmit,\n        startIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 24\n        }, this),\n        sx: {\n          ml: 1,\n          color: \"#fff\",\n          border: \"solid 1px #1E1E1E\",\n          '&:hover': {\n            borderColor: \"#fff\"\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentsSection, \"5XqZCibHGuo3M5GShB4y9KnTeIQ=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = CommentsSection;\nexport default CommentsSection;\nvar _c;\n$RefreshReg$(_c, \"CommentsSection\");","map":{"version":3,"names":["React","useState","useEffect","axios","Box","Typography","TextField","Button","useAuth","SendIcon","useNavigate","jsxDEV","_jsxDEV","CommentsSection","mediaId","type","_s","comments","setComments","newComment","setNewComment","userId","navigate","fetchComments","response","post","movie_id","data","success","comments_list","console","error","message","handleCommentSubmit","movieId","comment","alert","getUsernameFromId","user_id","username","sx","mt","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","map","mb","id","display","value","onChange","e","target","label","fullWidth","onClick","startIcon","ml","color","border","borderColor","_c","$RefreshReg$"],"sources":["C:/Users/Accappi/Desktop/progetti/cinemate/src/components/CommentsSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Box, Typography, TextField, Button } from '@mui/material';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction CommentsSection({ mediaId, type }) {\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n  const { userId } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchComments = async () => {\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/api/comments/getComments', { movie_id: mediaId });\r\n        if (response.data.success) {\r\n          setComments(response.data.comments_list);\r\n        } else {\r\n          console.error('Error fetching comments:', response.data.message);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching comments:', error);\r\n      }\r\n    };\r\n\r\n    fetchComments();\r\n  }, [mediaId]);\r\n\r\n  const handleCommentSubmit = async () => {\r\n    if(userId === -1) {\r\n        navigate(\"/signin\");\r\n    }\r\n    else {\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/comments/addComment', {\r\n              userId,\r\n              movieId: mediaId,\r\n              comment: newComment\r\n            });\r\n            if (response.data.success) {\r\n              setComments([...comments, response.data.comment]);\r\n              setNewComment('');\r\n            } else {\r\n              alert('Error adding comment: ' + response.data.message);\r\n            }\r\n          } catch (error) {\r\n            alert('Error adding comment: ' + error);\r\n          }\r\n    }\r\n  };\r\n\r\n  const getUsernameFromId = async (user_id) => {\r\n    try {\r\n        const response = await axios.post('http://localhost:5000/api/comments/getUsernameFromId', { userId: user_id });\r\n        if (response.data.success) {\r\n            return response.data.username;\r\n        } else {\r\n            alert('Error fetching usernames in comments: ' + response.data.message);\r\n        }\r\n    } catch (error) {\r\n        alert('Error fetching usernames in comments: ' + error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ mt: 2 }}>\r\n      <Typography variant=\"h6\">Comments</Typography>\r\n      <Box sx={{ mt: 1 }}>\r\n        {comments.map((comment) => (\r\n          <Box key={comment.id} sx={{ mb: 1 }}>\r\n            <Typography variant=\"body1\">{comment.user_id}: {comment.comment}</Typography>\r\n            {/* <Typography variant=\"body1\">{getUsernameFromId(comment.user_id)}: {comment.comment}</Typography> */}\r\n            {/* Qui puoi aggiungere la logica per le risposte */}\r\n          </Box>\r\n        ))}\r\n      </Box>\r\n      <Box sx={{ display: 'flex', mt: 2 }}>\r\n        <TextField\r\n          value={newComment}\r\n          onChange={(e) => setNewComment(e.target.value)}\r\n          label=\"Add a comment\"\r\n          fullWidth\r\n        />\r\n        <Button\r\n            onClick={handleCommentSubmit}\r\n            startIcon={<SendIcon />}\r\n            sx={{\r\n            ml: 1,\r\n            color: \"#fff\",\r\n            border: \"solid 1px #1E1E1E\",\r\n            '&:hover': {\r\n                borderColor: \"#fff\",\r\n            }\r\n            }}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CommentsSection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}