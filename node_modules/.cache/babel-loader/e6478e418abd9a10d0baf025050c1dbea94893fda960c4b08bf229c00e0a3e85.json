{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Accappi\\\\Desktop\\\\progetti\\\\cinemate\\\\src\\\\pages\\\\ViewedMediaPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Tabs, Tab, Grid } from '@mui/material';\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nimport MovieList from '../components/MovieList'; // Import MovieList component\nimport SeriesList from '../components/SerieList'; // Import SeriesList component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ViewedMediaPage() {\n  _s();\n  const {\n    userId\n  } = useAuth();\n  const [value, setValue] = useState(0);\n  const [movies, setMovies] = useState([]);\n  const [series, setSeries] = useState([]);\n  useEffect(() => {\n    // Fetch viewed movies\n    axios.post('http://localhost:5000/api/movies/getViewedMoviesInfo', {\n      userId\n    }).then(response => {\n      if (response.data.success) {\n        setMovies(response.data.movies);\n        console.log(response.data.movies);\n      } else {\n        console.error('Failed to fetch viewed movies:', response.data.message);\n      }\n    }).catch(error => {\n      console.error('Error fetching viewed movies:', error);\n    });\n\n    // Fetch viewed series\n    axios.post('http://localhost:5000/api/series/getViewedSeriesInfo', {\n      userId\n    }).then(response => {\n      if (response.data.success) {\n        setSeries(response.data.series);\n      } else {\n        console.error('Failed to fetch viewed series:', response.data.message);\n      }\n    }).catch(error => {\n      console.error('Error fetching viewed series:', error);\n    });\n  }, [userId]);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(ViewedMediaPage, \"kLKarxd71/mLanhNdYZPP1wsGlw=\", false, function () {\n  return [useAuth];\n});\n_c = ViewedMediaPage;\nexport default ViewedMediaPage;\nvar _c;\n$RefreshReg$(_c, \"ViewedMediaPage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Tabs","Tab","Grid","axios","useAuth","MovieList","SeriesList","jsxDEV","_jsxDEV","ViewedMediaPage","_s","userId","value","setValue","movies","setMovies","series","setSeries","post","then","response","data","success","console","log","error","message","catch","handleChange","event","newValue","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Accappi/Desktop/progetti/cinemate/src/pages/ViewedMediaPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Typography, Tabs, Tab, Grid } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport MovieList from '../components/MovieList'; // Import MovieList component\r\nimport SeriesList from '../components/SerieList'; // Import SeriesList component\r\n\r\nfunction ViewedMediaPage() {\r\n  const { userId } = useAuth();\r\n  const [value, setValue] = useState(0);\r\n  const [movies, setMovies] = useState([]);\r\n  const [series, setSeries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch viewed movies\r\n    axios.post('http://localhost:5000/api/movies/getViewedMoviesInfo', { userId })\r\n      .then(response => {\r\n        if (response.data.success) {\r\n          setMovies(response.data.movies);\r\n          console.log(response.data.movies);\r\n        } else {\r\n          console.error('Failed to fetch viewed movies:', response.data.message);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching viewed movies:', error);\r\n      });\r\n\r\n    // Fetch viewed series\r\n    axios.post('http://localhost:5000/api/series/getViewedSeriesInfo', { userId })\r\n      .then(response => {\r\n        if (response.data.success) {\r\n          setSeries(response.data.series);\r\n        } else {\r\n          console.error('Failed to fetch viewed series:', response.data.message);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching viewed series:', error);\r\n      });\r\n  }, [userId]);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {/* <Typography variant=\"h4\" gutterBottom>\r\n        Viewed Media\r\n      </Typography>\r\n      <Tabs value={value} onChange={handleChange} aria-label=\"viewed media tabs\">\r\n        <Tab label=\"Movies\" />\r\n        <Tab label=\"Series\" />\r\n      </Tabs>\r\n      <Grid container spacing={3}>\r\n        {value === 0 && (\r\n          <Grid item xs={12}>\r\n            <MovieList title=\"Viewed Movies\" movies={movies} />\r\n          </Grid>\r\n        )}\r\n        {value === 1 && (\r\n          <Grid item xs={12}>\r\n            <SeriesList title=\"Viewed Series\" series={series} />\r\n          </Grid>\r\n        )}\r\n      </Grid> */}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ViewedMediaPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,IAAI,EAAEC,GAAG,EAAEC,IAAI,QAAQ,eAAe;AACtE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,yBAAyB;AACjD,OAAOC,SAAS,MAAM,yBAAyB,CAAC,CAAC;AACjD,OAAOC,UAAU,MAAM,yBAAyB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAO,CAAC,GAAGP,OAAO,CAAC,CAAC;EAC5B,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACkB,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACoB,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACAM,KAAK,CAACe,IAAI,CAAC,sDAAsD,EAAE;MAAEP;IAAO,CAAC,CAAC,CAC3EQ,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAIA,QAAQ,CAACC,IAAI,CAACC,OAAO,EAAE;QACzBP,SAAS,CAACK,QAAQ,CAACC,IAAI,CAACP,MAAM,CAAC;QAC/BS,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACC,IAAI,CAACP,MAAM,CAAC;MACnC,CAAC,MAAM;QACLS,OAAO,CAACE,KAAK,CAAC,gCAAgC,EAAEL,QAAQ,CAACC,IAAI,CAACK,OAAO,CAAC;MACxE;IACF,CAAC,CAAC,CACDC,KAAK,CAACF,KAAK,IAAI;MACdF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD,CAAC,CAAC;;IAEJ;IACAtB,KAAK,CAACe,IAAI,CAAC,sDAAsD,EAAE;MAAEP;IAAO,CAAC,CAAC,CAC3EQ,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAIA,QAAQ,CAACC,IAAI,CAACC,OAAO,EAAE;QACzBL,SAAS,CAACG,QAAQ,CAACC,IAAI,CAACL,MAAM,CAAC;MACjC,CAAC,MAAM;QACLO,OAAO,CAACE,KAAK,CAAC,gCAAgC,EAAEL,QAAQ,CAACC,IAAI,CAACK,OAAO,CAAC;MACxE;IACF,CAAC,CAAC,CACDC,KAAK,CAACF,KAAK,IAAI;MACdF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD,CAAC,CAAC;EACN,CAAC,EAAE,CAACd,MAAM,CAAC,CAAC;EAEZ,MAAMiB,YAAY,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACxCjB,QAAQ,CAACiB,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEtB,OAAA,CAACV,SAAS;IAAAiC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAoBC,CAAC;AAEhB;AAACxB,EAAA,CA9DQD,eAAe;EAAA,QACHL,OAAO;AAAA;AAAA+B,EAAA,GADnB1B,eAAe;AAgExB,eAAeA,eAAe;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}