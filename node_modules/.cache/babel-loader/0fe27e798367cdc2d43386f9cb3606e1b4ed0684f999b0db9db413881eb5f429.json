{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Accappi\\\\Desktop\\\\progetti\\\\cinemate\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/AuthContext.js\n\nimport React, { createContext, useState, useContext } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userId, setUserId] = useState(-1);\n  const [likedMovies, setLikedMovies] = useState([]);\n  const [viewedMovies, setViewedMovies] = useState([]);\n  const [likedSeries, setLikedSeries] = useState([]);\n  const [viewedSeries, setViewedSeries] = useState([]);\n  const fetchLikedMovies = async () => {\n    if (userId === -1) {\n      //navigate('/signin');\n    } else {\n      try {\n        const response = await axios.post('http://localhost:5000/api/movies/getLikedMovies', {\n          userId: userId\n        });\n        if (response.data.success) {\n          setLikedMovies(response.data.likedMovies);\n        } else {\n          alert('Error fetching likes: ' + response.data.message);\n        }\n      } catch (error) {\n        alert('Error fetching likes: ' + error);\n      }\n    }\n  };\n  const fetchViewedMovies = async () => {\n    if (userId === -1) {\n      //navigate('/signin');\n    } else {\n      try {\n        const response = await axios.post('http://localhost:5000/api/movies/getViewedMovies', {\n          userId: userId\n        });\n        if (response.data.success) {\n          setViewedMovies(response.data.viewedMovies);\n        } else {\n          alert('Error fetching viewed movies: ' + response.data.message);\n        }\n      } catch (error) {\n        alert('Error fetching viewed movies: ' + error);\n      }\n    }\n  };\n  const fetchLikedSeries = async () => {\n    if (userId == -1) {\n      //navigate('/signin');\n    } else {\n      try {\n        const response = await axios.post('http://localhost:5000/api/series/getLikedSeries', {\n          userId: userId\n        });\n        if (response.data.success) {\n          setLikedSeries(response.data.likedSeries);\n        } else {\n          alert('Error fetching likes: ' + response.data.message);\n        }\n      } catch (error) {\n        alert('Error fetching likes: ' + error);\n      }\n    }\n  };\n  const fetchViewedSeries = async () => {\n    if (userId == -1) {\n      //navigate('/signin');\n    } else {\n      try {\n        const response = await axios.post('http://localhost:5000/api/series/getViewedSeries', {\n          userId: userId\n        });\n        if (response.data.success) {\n          setViewedSeries(response.data.viewedSeries);\n        } else {\n          alert('Error fetching viewed series: ' + response.data.message);\n        }\n      } catch (error) {\n        alert('Error fetching viewed series: ' + error);\n      }\n    }\n  };\n  const login = async userId => {\n    setIsLoggedIn(true);\n    setUserId(userId);\n    // Wait for all fetches to complete\n    await Promise.all([fetchLikedMovies(), fetchViewedMovies(), fetchLikedSeries(), fetchViewedSeries()]);\n    console.log(likedMovies);\n    console.log(viewedMovies);\n  };\n  const logout = () => {\n    setIsLoggedIn(false);\n    setUserId(-1); // Reset userId on logout\n    setLikedMovies([]);\n    setViewedMovies([]);\n    setLikedSeries([]);\n    setViewedSeries([]);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      login,\n      logout,\n      userId,\n      likedMovies,\n      setLikedMovies,\n      viewedMovies,\n      setViewedMovies,\n      likedSeries,\n      setLikedSeries,\n      viewedSeries,\n      setViewedSeries\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"VtIb0cSoU1t+Tj8exCCCywC4a1Q=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isLoggedIn","setIsLoggedIn","userId","setUserId","likedMovies","setLikedMovies","viewedMovies","setViewedMovies","likedSeries","setLikedSeries","viewedSeries","setViewedSeries","fetchLikedMovies","response","post","data","success","alert","message","error","fetchViewedMovies","fetchLikedSeries","fetchViewedSeries","login","Promise","all","console","log","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/Accappi/Desktop/progetti/cinemate/src/contexts/AuthContext.js"],"sourcesContent":["// src/contexts/AuthContext.js\r\n\r\nimport React, { createContext, useState, useContext } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userId, setUserId] = useState(-1);\r\n  const [likedMovies, setLikedMovies] = useState([]);\r\n  const [viewedMovies, setViewedMovies] = useState([]);\r\n  const [likedSeries, setLikedSeries] = useState([]);\r\n  const [viewedSeries, setViewedSeries] = useState([]);\r\n\r\n  const fetchLikedMovies = async () => {\r\n    if (userId === -1) {\r\n      //navigate('/signin');\r\n    } else {\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/api/movies/getLikedMovies', {\r\n          userId: userId\r\n        });\r\n        if (response.data.success) {\r\n          setLikedMovies(response.data.likedMovies);\r\n        } else {\r\n          alert('Error fetching likes: ' + response.data.message);\r\n        }\r\n      } catch (error) {\r\n        alert('Error fetching likes: ' + error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const fetchViewedMovies = async () => {\r\n    if (userId === -1) {\r\n      //navigate('/signin');\r\n    } else {\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/api/movies/getViewedMovies', {\r\n          userId: userId\r\n        });\r\n        if (response.data.success) {\r\n          setViewedMovies(response.data.viewedMovies);\r\n        } else {\r\n          alert('Error fetching viewed movies: ' + response.data.message);\r\n        }\r\n      } catch (error) {\r\n        alert('Error fetching viewed movies: ' + error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const fetchLikedSeries = async () => {\r\n    if(userId == -1) {\r\n      //navigate('/signin');\r\n    }\r\n    else {\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/api/series/getLikedSeries', {\r\n          userId: userId\r\n        });\r\n        if (response.data.success) {\r\n          setLikedSeries(response.data.likedSeries);\r\n        } else {\r\n          alert('Error fetching likes: ' + response.data.message);\r\n        }\r\n      } catch (error) {\r\n        alert('Error fetching likes: ' + error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const fetchViewedSeries = async () => {\r\n    if(userId == -1) {\r\n      //navigate('/signin');\r\n    }\r\n    else {\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/api/series/getViewedSeries', {\r\n          userId: userId\r\n        });\r\n        if (response.data.success) {\r\n          setViewedSeries(response.data.viewedSeries);\r\n        } else {\r\n          alert('Error fetching viewed series: ' + response.data.message);\r\n        }\r\n      } catch (error) {\r\n        alert('Error fetching viewed series: ' + error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const login = async (userId) => {\r\n    setIsLoggedIn(true);\r\n    setUserId(userId);\r\n    // Wait for all fetches to complete\r\n    await Promise.all([\r\n      fetchLikedMovies(),\r\n      fetchViewedMovies(),\r\n      fetchLikedSeries(),\r\n      fetchViewedSeries()\r\n    ]);\r\n    console.log(likedMovies);\r\n    console.log(viewedMovies);\r\n  };\r\n\r\n  const logout = () => {\r\n    setIsLoggedIn(false);\r\n    setUserId(-1); // Reset userId on logout\r\n    setLikedMovies([]);\r\n    setViewedMovies([]);\r\n    setLikedSeries([]);\r\n    setViewedSeries([]);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ \r\n        isLoggedIn, \r\n        login, \r\n        logout, \r\n        userId, \r\n        likedMovies, \r\n        setLikedMovies, \r\n        viewedMovies, \r\n        setViewedMovies,\r\n        likedSeries, \r\n        setLikedSeries, \r\n        viewedSeries, \r\n        setViewedSeries\r\n      }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}