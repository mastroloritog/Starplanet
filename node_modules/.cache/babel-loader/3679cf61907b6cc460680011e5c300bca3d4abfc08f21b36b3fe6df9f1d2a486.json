{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Accappi\\\\Desktop\\\\progetti\\\\cinemate\\\\src\\\\components\\\\MediaInfo.js\";\nimport React from 'react';\nimport { Box, Typography, Card, CardMedia, CardContent } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MediaInfo({\n  media,\n  type\n}) {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      display: 'flex',\n      mb: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n      component: \"img\",\n      sx: {\n        width: 200\n      },\n      image: media.image,\n      alt: media.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"div\",\n          sx: {\n            fontWeight: 'bold'\n          },\n          children: media.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.primary\",\n          children: [\"Genre:\", \" \", media.genre.map((genre, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [index > 0 && ' - ', genre]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.primary\",\n          children: [\"Year: \", media.year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = MediaInfo;\nexport default MediaInfo;\nvar _c;\n$RefreshReg$(_c, \"MediaInfo\");","map":{"version":3,"names":["React","Box","Typography","Card","CardMedia","CardContent","jsxDEV","_jsxDEV","MediaInfo","media","type","sx","display","mb","children","component","width","image","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","flexDirection","flex","gutterBottom","variant","fontWeight","color","genre","map","index","Fragment","year","_c","$RefreshReg$"],"sources":["C:/Users/Accappi/Desktop/progetti/cinemate/src/components/MediaInfo.js"],"sourcesContent":["import React from 'react';\r\nimport { Box, Typography, Card, CardMedia, CardContent } from '@mui/material';\r\n\r\nfunction MediaInfo({ media, type }) {\r\n  return (\r\n    <Card sx={{ display: 'flex', mb: 2 }}>\r\n      <CardMedia\r\n        component=\"img\"\r\n        sx={{ width: 200 }}\r\n        image={media.image}\r\n        alt={media.title}\r\n      />\r\n      <Box sx={{ display: 'flex', flexDirection: 'column', flex: 1 }}>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"div\" sx={{ fontWeight: 'bold' }}>\r\n            {media.title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.primary\">\r\n            Genre:{\" \"}\r\n            {media.genre.map((genre, index) => (\r\n                <React.Fragment key={index}>\r\n                {index > 0 && ' - '}\r\n                {genre}\r\n                </React.Fragment>\r\n            ))}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.primary\">\r\n            Year: {media.year}\r\n          </Typography>\r\n        </CardContent>\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default MediaInfo;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,UAAU,EAAEC,IAAI,EAAEC,SAAS,EAAEC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,SAASC,SAASA,CAAC;EAAEC,KAAK;EAAEC;AAAK,CAAC,EAAE;EAClC,oBACEH,OAAA,CAACJ,IAAI;IAACQ,EAAE,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACnCP,OAAA,CAACH,SAAS;MACRW,SAAS,EAAC,KAAK;MACfJ,EAAE,EAAE;QAAEK,KAAK,EAAE;MAAI,CAAE;MACnBC,KAAK,EAAER,KAAK,CAACQ,KAAM;MACnBC,GAAG,EAAET,KAAK,CAACU;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACFhB,OAAA,CAACN,GAAG;MAACU,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEY,aAAa,EAAE,QAAQ;QAAEC,IAAI,EAAE;MAAE,CAAE;MAAAX,QAAA,eAC7DP,OAAA,CAACF,WAAW;QAAAS,QAAA,gBACVP,OAAA,CAACL,UAAU;UAACwB,YAAY;UAACC,OAAO,EAAC,IAAI;UAACZ,SAAS,EAAC,KAAK;UAACJ,EAAE,EAAE;YAAEiB,UAAU,EAAE;UAAO,CAAE;UAAAd,QAAA,EAC9EL,KAAK,CAACU;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACbhB,OAAA,CAACL,UAAU;UAACyB,OAAO,EAAC,OAAO;UAACE,KAAK,EAAC,cAAc;UAAAf,QAAA,GAAC,QACzC,EAAC,GAAG,EACTL,KAAK,CAACqB,KAAK,CAACC,GAAG,CAAC,CAACD,KAAK,EAAEE,KAAK,kBAC1BzB,OAAA,CAACP,KAAK,CAACiC,QAAQ;YAAAnB,QAAA,GACdkB,KAAK,GAAG,CAAC,IAAI,KAAK,EAClBF,KAAK;UAAA,GAFeE,KAAK;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGV,CACnB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACQ,CAAC,eACbhB,OAAA,CAACL,UAAU;UAACyB,OAAO,EAAC,OAAO;UAACE,KAAK,EAAC,cAAc;UAAAf,QAAA,GAAC,QACzC,EAACL,KAAK,CAACyB,IAAI;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX;AAACY,EAAA,GA9BQ3B,SAAS;AAgClB,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}