{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Accappi\\\\Desktop\\\\progetti\\\\cinemate\\\\src\\\\pages\\\\PopularSeriesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport SerieList from './../components/SerieList';\nimport { Container, CircularProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PopularSeriesPage() {\n  _s();\n  const [allSeries, setAllSeries] = useState([]); // Stores all series fetched initially\n  const [visibleSeries, setVisibleSeries] = useState([]); // Stores series currently visible\n  const [loading, setLoading] = useState(true);\n  const seriesPerLoad = 6; // Number of series to show on each scroll\n\n  useEffect(() => {\n    const fetchSeries = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/series/top100series');\n        const series = response.data;\n        setAllSeries(series);\n        setVisibleSeries(series.slice(0, seriesPerLoad)); // Initially show the first chunk\n      } catch (error) {\n        alert('Error fetching series: ' + error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSeries();\n  }, []);\n  useEffect(() => {\n    const handleScroll = () => {\n      // Check if the user is near the bottom of the page\n      if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 500 && !loading) {\n        setLoading(true);\n        // Load more series\n        setVisibleSeries(prevVisibleSeries => {\n          const currentLength = prevVisibleSeries.length;\n          const moreSeries = allSeries.slice(currentLength, currentLength + seriesPerLoad);\n          return [...prevVisibleSeries, ...moreSeries];\n        });\n        setLoading(false);\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [allSeries, loading]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(SerieList, {\n      title: \"Popular Series\",\n      series: visibleSeries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }, this), visibleSeries.length >= allSeries.length && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Yay! You have seen it all\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(PopularSeriesPage, \"OHPDSflcuyDD6XQoIB+0PlNHHUk=\");\n_c = PopularSeriesPage;\nexport default PopularSeriesPage;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import SerieList from './../components/SerieList';\n// import { Container, CircularProgress } from '@mui/material';\n\n// function PopularSeriesPage() {\n//   const [popularSeries, setPopularSeries] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     const fetchSeries = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/api/series/top100series');\n//         const series = response.data;\n\n//         setPopularSeries(series);\n//       } catch (error) {\n//         alert('Error fetching series: ' + error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchSeries();\n//   }, []);\n\n//   if (loading) {\n//     return (\n//       <Container>\n//         <CircularProgress />\n//       </Container>\n//     );\n//   }\n\n//   return (\n//     <Container>\n//       <SerieList \n//         title=\"Popular Series\" \n//         series={popularSeries}\n//       />\n//     </Container>\n//   );\n// }\n\n// export default PopularSeriesPage;\nvar _c;\n$RefreshReg$(_c, \"PopularSeriesPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","SerieList","Container","CircularProgress","jsxDEV","_jsxDEV","PopularSeriesPage","_s","allSeries","setAllSeries","visibleSeries","setVisibleSeries","loading","setLoading","seriesPerLoad","fetchSeries","response","get","series","data","slice","error","alert","handleScroll","window","innerHeight","scrollY","document","body","offsetHeight","prevVisibleSeries","currentLength","length","moreSeries","addEventListener","removeEventListener","children","title","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/Accappi/Desktop/progetti/cinemate/src/pages/PopularSeriesPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport SerieList from './../components/SerieList';\r\nimport { Container, CircularProgress } from '@mui/material';\r\n\r\nfunction PopularSeriesPage() {\r\n  const [allSeries, setAllSeries] = useState([]); // Stores all series fetched initially\r\n  const [visibleSeries, setVisibleSeries] = useState([]); // Stores series currently visible\r\n  const [loading, setLoading] = useState(true);\r\n  const seriesPerLoad = 6; // Number of series to show on each scroll\r\n\r\n  useEffect(() => {\r\n    const fetchSeries = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/series/top100series');\r\n        const series = response.data;\r\n        setAllSeries(series);\r\n        setVisibleSeries(series.slice(0, seriesPerLoad)); // Initially show the first chunk\r\n      } catch (error) {\r\n        alert('Error fetching series: ' + error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchSeries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      // Check if the user is near the bottom of the page\r\n      if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 500 && !loading) {\r\n        setLoading(true);\r\n        // Load more series\r\n        setVisibleSeries((prevVisibleSeries) => {\r\n          const currentLength = prevVisibleSeries.length;\r\n          const moreSeries = allSeries.slice(currentLength, currentLength + seriesPerLoad);\r\n          return [...prevVisibleSeries, ...moreSeries];\r\n        });\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, [allSeries, loading]);\r\n\r\n  return (\r\n    <Container>\r\n      <SerieList \r\n        title=\"Popular Series\" \r\n        series={visibleSeries}\r\n      />\r\n      {loading && <CircularProgress />}\r\n      {visibleSeries.length >= allSeries.length && (\r\n        <p style={{ textAlign: 'center' }}>Yay! You have seen it all</p>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default PopularSeriesPage;\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import SerieList from './../components/SerieList';\r\n// import { Container, CircularProgress } from '@mui/material';\r\n\r\n// function PopularSeriesPage() {\r\n//   const [popularSeries, setPopularSeries] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     const fetchSeries = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:5000/api/series/top100series');\r\n//         const series = response.data;\r\n        \r\n//         setPopularSeries(series);\r\n//       } catch (error) {\r\n//         alert('Error fetching series: ' + error);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchSeries();\r\n//   }, []);\r\n\r\n//   if (loading) {\r\n//     return (\r\n//       <Container>\r\n//         <CircularProgress />\r\n//       </Container>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <Container>\r\n//       <SerieList \r\n//         title=\"Popular Series\" \r\n//         series={popularSeries}\r\n//       />\r\n//     </Container>\r\n//   );\r\n// }\r\n\r\n// export default PopularSeriesPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}